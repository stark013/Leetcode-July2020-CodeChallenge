/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>  levelOrderBottom(TreeNode* root) {
        
        vector<vector<int>> vec;
        vector<int> level;
        if(root == NULL) return vec;
        
        queue<TreeNode *> q;
        q.push(root);
        
        int curr_level = 1;
        int next_level = 0;
        
        while(!q.empty())
        {
            TreeNode* temp = q.front();
            q.pop();
            
            level.push_back(temp->val);
            curr_level--;
            
            if(temp -> left != NULL){
                q.push(temp -> left);
                next_level++;
            }
            if(temp -> right != NULL){
                q.push(temp -> right);
                next_level++;
            }
            
            if(curr_level == 0){
                vec.push_back(level);
                level.clear();
                curr_level = next_level;
                next_level = 0;
            }
        }
        vector<vector<int> > result;
        for(int i = vec.size() - 1;i >=0; i--){
                result.push_back(vec[i]);
        }
        return result;
    }
};
