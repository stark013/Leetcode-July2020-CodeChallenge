/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > vec;
    
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root ==  NULL)
        {
            
            return vec;
        }
        
        vector<int> v;
        stack<TreeNode* > s1,s2;
        s1.push(root);
        
        while(!s1.empty() or !s2.empty() ){
            
            while(!s1.empty()){
                v.push_back(s1.top()->val);
                
                if(s1.top()->left)
                    s2.push(s1.top()->left);
                if(s1.top()->right)
                    s2.push(s1.top()->right);
                s1.pop();
            }
            
            if(s1.empty() ){
                vec.push_back(v);
                v.clear();
            }
            if(s1.empty() and s2.empty())
                break;
            
             while(!s2.empty()){
                 v.push_back(s2.top()->val);
                 
                 if(s2.top()->right)
                     s1.push(s2.top()->right);
                 if(s2.top()->left)
                     s1.push(s2.top()->left);
                 s2.pop();
             }  
            
            if(s2.empty() ){
                vec.push_back(v);
                v.clear();
            }
        
        }
        return vec; 
    }
};
